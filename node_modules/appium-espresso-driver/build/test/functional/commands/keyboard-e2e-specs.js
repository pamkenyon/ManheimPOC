'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _helpersSession = require('../helpers/session');

var _desired = require('../desired');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('keyboard', function () {
  this.timeout(_helpersSession.MOCHA_TIMEOUT);

  var driver = undefined;
  before(function callee$1$0() {
    var caps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          caps = _Object$assign({
            appActivity: 'io.appium.android.apis.view.AutoComplete4'
          }, _desired.APIDEMO_CAPS);
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _helpersSession.initSession)(caps));

        case 3:
          driver = context$2$0.sent;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.deleteSession)());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should send keys to the correct element', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath('//android.widget.AutoCompleteTextView'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(el.click());

        case 5:
          context$2$0.prev = 5;
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(el.click());

        case 8:
          context$2$0.next = 13;
          break;

        case 10:
          context$2$0.prev = 10;
          context$2$0.t0 = context$2$0['catch'](5);

          console.log(context$2$0.t0); // eslint-disable-line

        case 13:
          context$2$0.next = 15;
          return _regeneratorRuntime.awrap(el.sendKeys('hello'));

        case 15:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[5, 10]]);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9rZXlib2FyZC1lMmUtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7b0JBQWlCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7OzhCQUNhLG9CQUFvQjs7dUJBQ2pELFlBQVk7O0FBR3pDLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLFVBQVUsRUFBRSxZQUFZO0FBQy9CLE1BQUksQ0FBQyxPQUFPLCtCQUFlLENBQUM7O0FBRTVCLE1BQUksTUFBTSxZQUFBLENBQUM7QUFDWCxRQUFNLENBQUM7UUFDRCxJQUFJOzs7O0FBQUosY0FBSSxHQUFHLGVBQWM7QUFDdkIsdUJBQVcsRUFBRSwyQ0FBMkM7V0FDekQsd0JBQWU7OzJDQUNELGlDQUFZLElBQUksQ0FBQzs7O0FBQWhDLGdCQUFNOzs7Ozs7O0dBQ1AsQ0FBQyxDQUFDO0FBQ0gsT0FBSyxDQUFDOzs7OzsyQ0FDRSxvQ0FBZTs7Ozs7OztHQUN0QixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLHlDQUF5QyxFQUFFO1FBQ3hDLEVBQUU7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxjQUFjLENBQUMsdUNBQXVDLENBQUM7OztBQUF6RSxZQUFFOzsyQ0FDQSxFQUFFLENBQUMsS0FBSyxFQUFFOzs7OzsyQ0FHUixFQUFFLENBQUMsS0FBSyxFQUFFOzs7Ozs7Ozs7O0FBRWhCLGlCQUFPLENBQUMsR0FBRyxnQkFBSyxDQUFDOzs7OzJDQUdiLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDOzs7Ozs7O0dBQzNCLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvY29tbWFuZHMva2V5Ym9hcmQtZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgeyBpbml0U2Vzc2lvbiwgZGVsZXRlU2Vzc2lvbiwgTU9DSEFfVElNRU9VVCB9IGZyb20gJy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5pbXBvcnQgeyBBUElERU1PX0NBUFMgfSBmcm9tICcuLi9kZXNpcmVkJztcblxuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xuXG5kZXNjcmliZSgna2V5Ym9hcmQnLCBmdW5jdGlvbiAoKSB7XG4gIHRoaXMudGltZW91dChNT0NIQV9USU1FT1VUKTtcblxuICBsZXQgZHJpdmVyO1xuICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBjYXBzID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBhcHBBY3Rpdml0eTogJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMudmlldy5BdXRvQ29tcGxldGU0J1xuICAgIH0sIEFQSURFTU9fQ0FQUyk7XG4gICAgZHJpdmVyID0gYXdhaXQgaW5pdFNlc3Npb24oY2Fwcyk7XG4gIH0pO1xuICBhZnRlcihhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgYXdhaXQgZGVsZXRlU2Vzc2lvbigpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHNlbmQga2V5cyB0byB0aGUgY29ycmVjdCBlbGVtZW50JywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aCgnLy9hbmRyb2lkLndpZGdldC5BdXRvQ29tcGxldGVUZXh0VmlldycpO1xuICAgIGF3YWl0IGVsLmNsaWNrKCk7XG5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgZWwuY2xpY2soKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICB9XG5cbiAgICBhd2FpdCBlbC5zZW5kS2V5cygnaGVsbG8nKTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
