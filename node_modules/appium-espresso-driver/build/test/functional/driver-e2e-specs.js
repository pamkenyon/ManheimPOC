'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _wd = require('wd');

var _wd2 = _interopRequireDefault(_wd);

var _helpersSession = require('./helpers/session');

var _desired = require('./desired');

var _ = require('../..');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('createSession', function () {
  var driver = undefined;
  var server = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _.startServer)(_helpersSession.PORT, _helpersSession.HOST));

        case 2:
          server = context$2$0.sent;

          driver = _wd2['default'].promiseChainRemote(_helpersSession.HOST, _helpersSession.PORT);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(server.close());

        case 3:
          context$2$0.next = 7;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[0, 5]]);
  });
  afterEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.quit());

        case 3:
          context$2$0.next = 7;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[0, 5]]);
  });

  it('should start android session focusing on default activity', function callee$1$0() {
    var status, activity;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.init(_desired.APIDEMO_CAPS));

        case 2:
          status = context$2$0.sent;

          status[1].app.should.eql(_desired.APIDEMO_CAPS.app);

          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity());

        case 6:
          activity = context$2$0.sent;

          activity.should.equal('.ApiDemos');

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should start android session focusing on specified activity', function callee$1$0() {
    var status, activity;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.init(_Object$assign({
            appActivity: 'io.appium.android.apis.accessibility.AccessibilityNodeProviderActivity'
          }, _desired.APIDEMO_CAPS)));

        case 2:
          status = context$2$0.sent;

          status[1].app.should.eql(_desired.APIDEMO_CAPS.app);

          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity());

        case 6:
          activity = context$2$0.sent;

          activity.should.equal('.accessibility.AccessibilityNodeProviderActivity');

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should reject start session for non-existent activity', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.init(_Object$assign({
            appActivity: 'io.appium.android.apis.some.fake.Activity'
          }, _desired.APIDEMO_CAPS)).should.eventually.be.rejectedWith(/unable to resolve/i));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should reject opening of appPackage with incorrect signature', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.init(_Object$assign({
            appPackage: 'com.android.settings'
          }, _desired.APIDEMO_CAPS)).should.eventually.be.rejectedWith(/does not have a signature matching/i));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  describe('.startActivity', function () {
    it('should start activity by name', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.init(_desired.APIDEMO_CAPS));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.startActivity({ appActivity: '.accessibility.AccessibilityNodeProviderActivity' }));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity().should.eventually.eql('.accessibility.AccessibilityNodeProviderActivity'));

          case 6:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should start activity by fully-qualified name', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.init(_desired.APIDEMO_CAPS));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.startActivity({ appActivity: 'io.appium.android.apis.accessibility.AccessibilityNodeProviderActivity' }));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.getCurrentDeviceActivity().should.eventually.eql('.accessibility.AccessibilityNodeProviderActivity'));

          case 6:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
});

// for now the activity needs to be fully qualified

// for now the activity needs to be fully qualified
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9kcml2ZXItZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O29CQUFpQixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7OztrQkFDOUIsSUFBSTs7Ozs4QkFDUSxtQkFBbUI7O3VCQUNqQixXQUFXOztnQkFDWixPQUFPOztBQUduQyxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBWTtBQUNwQyxNQUFJLE1BQU0sWUFBQSxDQUFDO0FBQ1gsTUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLFFBQU0sQ0FBQzs7Ozs7MkNBQ1UsOERBQXVCOzs7QUFBdEMsZ0JBQU07O0FBQ04sZ0JBQU0sR0FBRyxnQkFBRyxrQkFBa0IsNENBQVksQ0FBQzs7Ozs7OztHQUM1QyxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7OzsyQ0FFSSxNQUFNLENBQUMsS0FBSyxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7R0FFdkIsQ0FBQyxDQUFDO0FBQ0gsV0FBUyxDQUFDOzs7Ozs7MkNBRUEsTUFBTSxDQUFDLElBQUksRUFBRTs7Ozs7Ozs7Ozs7Ozs7O0dBRXRCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsMkRBQTJELEVBQUU7UUFDMUQsTUFBTSxFQUlOLFFBQVE7Ozs7OzJDQUpPLE1BQU0sQ0FBQyxJQUFJLHVCQUFjOzs7QUFBeEMsZ0JBQU07O0FBRVYsZ0JBQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxzQkFBYSxHQUFHLENBQUMsQ0FBQzs7OzJDQUV0QixNQUFNLENBQUMsd0JBQXdCLEVBQUU7OztBQUFsRCxrQkFBUTs7QUFDWixrQkFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7Ozs7Ozs7R0FDcEMsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLDZEQUE2RCxFQUFFO1FBRTVELE1BQU0sRUFNTixRQUFROzs7OzsyQ0FOTyxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWM7QUFDM0MsdUJBQVcsRUFBRSx3RUFBd0U7V0FDdEYsd0JBQWUsQ0FBQzs7O0FBRmIsZ0JBQU07O0FBSVYsZ0JBQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxzQkFBYSxHQUFHLENBQUMsQ0FBQzs7OzJDQUV0QixNQUFNLENBQUMsd0JBQXdCLEVBQUU7OztBQUFsRCxrQkFBUTs7QUFDWixrQkFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsa0RBQWtELENBQUMsQ0FBQzs7Ozs7OztHQUMzRSxDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMsdURBQXVELEVBQUU7Ozs7OzJDQUVwRCxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWM7QUFDOUIsdUJBQVcsRUFBRSwyQ0FBMkM7V0FDekQsd0JBQWUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQzs7Ozs7OztHQUMxRSxDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMsOERBQThELEVBQUU7Ozs7OzJDQUMzRCxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWM7QUFDOUIsc0JBQVUsRUFBRSxzQkFBc0I7V0FDbkMsd0JBQWUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxxQ0FBcUMsQ0FBQzs7Ozs7OztHQUMzRixDQUFDLENBQUM7QUFDSCxVQUFRLENBQUMsZ0JBQWdCLEVBQUUsWUFBWTtBQUNyQyxNQUFFLENBQUMsK0JBQStCLEVBQUU7Ozs7OzZDQUM1QixNQUFNLENBQUMsSUFBSSx1QkFBYzs7Ozs2Q0FDekIsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFDLFdBQVcsRUFBRSxrREFBa0QsRUFBQyxDQUFDOzs7OzZDQUN2RixNQUFNLENBQUMsd0JBQXdCLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxrREFBa0QsQ0FBQzs7Ozs7OztLQUNsSCxDQUFDLENBQUM7QUFDSCxNQUFFLENBQUMsK0NBQStDLEVBQUU7Ozs7OzZDQUM1QyxNQUFNLENBQUMsSUFBSSx1QkFBYzs7Ozs2Q0FDekIsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFDLFdBQVcsRUFBRSx3RUFBd0UsRUFBQyxDQUFDOzs7OzZDQUM3RyxNQUFNLENBQUMsd0JBQXdCLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxrREFBa0QsQ0FBQzs7Ozs7OztLQUNsSCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9mdW5jdGlvbmFsL2RyaXZlci1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCB3ZCBmcm9tICd3ZCc7XG5pbXBvcnQgeyBIT1NULCBQT1JUIH0gZnJvbSAnLi9oZWxwZXJzL3Nlc3Npb24nO1xuaW1wb3J0IHsgQVBJREVNT19DQVBTIH0gZnJvbSAnLi9kZXNpcmVkJztcbmltcG9ydCB7IHN0YXJ0U2VydmVyIH0gZnJvbSAnLi4vLi4nO1xuXG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdjcmVhdGVTZXNzaW9uJywgZnVuY3Rpb24gKCkge1xuICBsZXQgZHJpdmVyO1xuICBsZXQgc2VydmVyO1xuICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIHNlcnZlciA9IGF3YWl0IHN0YXJ0U2VydmVyKFBPUlQsIEhPU1QpO1xuICAgIGRyaXZlciA9IHdkLnByb21pc2VDaGFpblJlbW90ZShIT1NULCBQT1JUKTtcbiAgfSk7XG4gIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgc2VydmVyLmNsb3NlKCk7XG4gICAgfSBjYXRjaCAoaWduKSB7fVxuICB9KTtcbiAgYWZ0ZXJFYWNoKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgZHJpdmVyLnF1aXQoKTtcbiAgICB9IGNhdGNoIChpZ24pIHt9XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgc3RhcnQgYW5kcm9pZCBzZXNzaW9uIGZvY3VzaW5nIG9uIGRlZmF1bHQgYWN0aXZpdHknLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IHN0YXR1cyA9IGF3YWl0IGRyaXZlci5pbml0KEFQSURFTU9fQ0FQUyk7XG5cbiAgICBzdGF0dXNbMV0uYXBwLnNob3VsZC5lcWwoQVBJREVNT19DQVBTLmFwcCk7XG5cbiAgICBsZXQgYWN0aXZpdHkgPSBhd2FpdCBkcml2ZXIuZ2V0Q3VycmVudERldmljZUFjdGl2aXR5KCk7XG4gICAgYWN0aXZpdHkuc2hvdWxkLmVxdWFsKCcuQXBpRGVtb3MnKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgc3RhcnQgYW5kcm9pZCBzZXNzaW9uIGZvY3VzaW5nIG9uIHNwZWNpZmllZCBhY3Rpdml0eScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAvLyBmb3Igbm93IHRoZSBhY3Rpdml0eSBuZWVkcyB0byBiZSBmdWxseSBxdWFsaWZpZWRcbiAgICBsZXQgc3RhdHVzID0gYXdhaXQgZHJpdmVyLmluaXQoT2JqZWN0LmFzc2lnbih7XG4gICAgICBhcHBBY3Rpdml0eTogJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMuYWNjZXNzaWJpbGl0eS5BY2Nlc3NpYmlsaXR5Tm9kZVByb3ZpZGVyQWN0aXZpdHknXG4gICAgfSwgQVBJREVNT19DQVBTKSk7XG5cbiAgICBzdGF0dXNbMV0uYXBwLnNob3VsZC5lcWwoQVBJREVNT19DQVBTLmFwcCk7XG5cbiAgICBsZXQgYWN0aXZpdHkgPSBhd2FpdCBkcml2ZXIuZ2V0Q3VycmVudERldmljZUFjdGl2aXR5KCk7XG4gICAgYWN0aXZpdHkuc2hvdWxkLmVxdWFsKCcuYWNjZXNzaWJpbGl0eS5BY2Nlc3NpYmlsaXR5Tm9kZVByb3ZpZGVyQWN0aXZpdHknKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgcmVqZWN0IHN0YXJ0IHNlc3Npb24gZm9yIG5vbi1leGlzdGVudCBhY3Rpdml0eScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAvLyBmb3Igbm93IHRoZSBhY3Rpdml0eSBuZWVkcyB0byBiZSBmdWxseSBxdWFsaWZpZWRcbiAgICBhd2FpdCBkcml2ZXIuaW5pdChPYmplY3QuYXNzaWduKHtcbiAgICAgIGFwcEFjdGl2aXR5OiAnaW8uYXBwaXVtLmFuZHJvaWQuYXBpcy5zb21lLmZha2UuQWN0aXZpdHknXG4gICAgfSwgQVBJREVNT19DQVBTKSkuc2hvdWxkLmV2ZW50dWFsbHkuYmUucmVqZWN0ZWRXaXRoKC91bmFibGUgdG8gcmVzb2x2ZS9pKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgcmVqZWN0IG9wZW5pbmcgb2YgYXBwUGFja2FnZSB3aXRoIGluY29ycmVjdCBzaWduYXR1cmUnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgYXdhaXQgZHJpdmVyLmluaXQoT2JqZWN0LmFzc2lnbih7XG4gICAgICBhcHBQYWNrYWdlOiAnY29tLmFuZHJvaWQuc2V0dGluZ3MnXG4gICAgfSwgQVBJREVNT19DQVBTKSkuc2hvdWxkLmV2ZW50dWFsbHkuYmUucmVqZWN0ZWRXaXRoKC9kb2VzIG5vdCBoYXZlIGEgc2lnbmF0dXJlIG1hdGNoaW5nL2kpO1xuICB9KTtcbiAgZGVzY3JpYmUoJy5zdGFydEFjdGl2aXR5JywgZnVuY3Rpb24gKCkge1xuICAgIGl0KCdzaG91bGQgc3RhcnQgYWN0aXZpdHkgYnkgbmFtZScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5pbml0KEFQSURFTU9fQ0FQUyk7XG4gICAgICBhd2FpdCBkcml2ZXIuc3RhcnRBY3Rpdml0eSh7YXBwQWN0aXZpdHk6ICcuYWNjZXNzaWJpbGl0eS5BY2Nlc3NpYmlsaXR5Tm9kZVByb3ZpZGVyQWN0aXZpdHknfSk7XG4gICAgICBhd2FpdCBkcml2ZXIuZ2V0Q3VycmVudERldmljZUFjdGl2aXR5KCkuc2hvdWxkLmV2ZW50dWFsbHkuZXFsKCcuYWNjZXNzaWJpbGl0eS5BY2Nlc3NpYmlsaXR5Tm9kZVByb3ZpZGVyQWN0aXZpdHknKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHN0YXJ0IGFjdGl2aXR5IGJ5IGZ1bGx5LXF1YWxpZmllZCBuYW1lJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgYXdhaXQgZHJpdmVyLmluaXQoQVBJREVNT19DQVBTKTtcbiAgICAgIGF3YWl0IGRyaXZlci5zdGFydEFjdGl2aXR5KHthcHBBY3Rpdml0eTogJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMuYWNjZXNzaWJpbGl0eS5BY2Nlc3NpYmlsaXR5Tm9kZVByb3ZpZGVyQWN0aXZpdHknfSk7XG4gICAgICBhd2FpdCBkcml2ZXIuZ2V0Q3VycmVudERldmljZUFjdGl2aXR5KCkuc2hvdWxkLmV2ZW50dWFsbHkuZXFsKCcuYWNjZXNzaWJpbGl0eS5BY2Nlc3NpYmlsaXR5Tm9kZVByb3ZpZGVyQWN0aXZpdHknKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
