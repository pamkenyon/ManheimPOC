'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _wd = require('wd');

var _wd2 = _interopRequireDefault(_wd);

var _ = require('../../..');

var HOST = '0.0.0.0',
    PORT = 4994;
var MOCHA_TIMEOUT = 60 * 1000 * (process.env.TRAVIS ? 10 : 4);

var driver = undefined,
    server = undefined;

function initDriver() {
  return _regeneratorRuntime.async(function initDriver$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        driver = _wd2['default'].promiseChainRemote(HOST, PORT);
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap((0, _.startServer)(PORT, HOST));

      case 3:
        server = context$1$0.sent;
        return context$1$0.abrupt('return', driver);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function initSession(caps) {
  var serverRes;
  return _regeneratorRuntime.async(function initSession$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(initDriver());

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(driver.init(caps));

      case 4:
        serverRes = context$1$0.sent;

        if (!caps.udid && !caps.fullReset && serverRes[1].udid) {
          caps.udid = serverRes[1].udid;
        }

        // await driver.setImplicitWaitTimeout(5000);

        return context$1$0.abrupt('return', driver);

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function deleteSession() {
  return _regeneratorRuntime.async(function deleteSession$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(driver.quit());

      case 3:
        context$1$0.next = 7;
        break;

      case 5:
        context$1$0.prev = 5;
        context$1$0.t0 = context$1$0['catch'](0);

      case 7:
        context$1$0.prev = 7;
        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(server.close());

      case 10:
        context$1$0.next = 14;
        break;

      case 12:
        context$1$0.prev = 12;
        context$1$0.t1 = context$1$0['catch'](7);

      case 14:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 5], [7, 12]]);
}

exports.initDriver = initDriver;
exports.initSession = initSession;
exports.deleteSession = deleteSession;
exports.HOST = HOST;
exports.PORT = PORT;
exports.MOCHA_TIMEOUT = MOCHA_TIMEOUT;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9oZWxwZXJzL3Nlc3Npb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztrQkFBZSxJQUFJOzs7O2dCQUNTLFVBQVU7O0FBR3RDLElBQU0sSUFBSSxHQUFHLFNBQVM7SUFDaEIsSUFBSSxHQUFHLElBQUksQ0FBQztBQUNsQixJQUFNLGFBQWEsR0FBRyxFQUFFLEdBQUcsSUFBSSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUEsQUFBQyxDQUFDOztBQUVoRSxJQUFJLE1BQU0sWUFBQTtJQUFFLE1BQU0sWUFBQSxDQUFDOztBQUVuQixTQUFlLFVBQVU7Ozs7QUFDdkIsY0FBTSxHQUFHLGdCQUFHLGtCQUFrQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQzs7eUNBQzVCLG1CQUFZLElBQUksRUFBRSxJQUFJLENBQUM7OztBQUF0QyxjQUFNOzRDQUVDLE1BQU07Ozs7Ozs7Q0FDZDs7QUFFRCxTQUFlLFdBQVcsQ0FBRSxJQUFJO01BRTFCLFNBQVM7Ozs7O3lDQURQLFVBQVUsRUFBRTs7Ozt5Q0FDSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzs7O0FBQW5DLGlCQUFTOztBQUNiLFlBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFO0FBQ3RELGNBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztTQUMvQjs7Ozs0Q0FJTSxNQUFNOzs7Ozs7O0NBQ2Q7O0FBRUQsU0FBZSxhQUFhOzs7Ozs7eUNBRWxCLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7Ozs7Ozs7eUNBR2IsTUFBTSxDQUFDLEtBQUssRUFBRTs7Ozs7Ozs7Ozs7Ozs7O0NBRXZCOztRQUVRLFVBQVUsR0FBVixVQUFVO1FBQUUsV0FBVyxHQUFYLFdBQVc7UUFBRSxhQUFhLEdBQWIsYUFBYTtRQUFFLElBQUksR0FBSixJQUFJO1FBQUUsSUFBSSxHQUFKLElBQUk7UUFBRSxhQUFhLEdBQWIsYUFBYSIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvaGVscGVycy9zZXNzaW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdkIGZyb20gJ3dkJztcbmltcG9ydCB7IHN0YXJ0U2VydmVyIH0gZnJvbSAnLi4vLi4vLi4nO1xuXG5cbmNvbnN0IEhPU1QgPSAnMC4wLjAuMCcsXG4gICAgICBQT1JUID0gNDk5NDtcbmNvbnN0IE1PQ0hBX1RJTUVPVVQgPSA2MCAqIDEwMDAgKiAocHJvY2Vzcy5lbnYuVFJBVklTID8gMTAgOiA0KTtcblxubGV0IGRyaXZlciwgc2VydmVyO1xuXG5hc3luYyBmdW5jdGlvbiBpbml0RHJpdmVyICgpIHtcbiAgZHJpdmVyID0gd2QucHJvbWlzZUNoYWluUmVtb3RlKEhPU1QsIFBPUlQpO1xuICBzZXJ2ZXIgPSBhd2FpdCBzdGFydFNlcnZlcihQT1JULCBIT1NUKTtcblxuICByZXR1cm4gZHJpdmVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBpbml0U2Vzc2lvbiAoY2Fwcykge1xuICBhd2FpdCBpbml0RHJpdmVyKCk7XG4gIGxldCBzZXJ2ZXJSZXMgPSBhd2FpdCBkcml2ZXIuaW5pdChjYXBzKTtcbiAgaWYgKCFjYXBzLnVkaWQgJiYgIWNhcHMuZnVsbFJlc2V0ICYmIHNlcnZlclJlc1sxXS51ZGlkKSB7XG4gICAgY2Fwcy51ZGlkID0gc2VydmVyUmVzWzFdLnVkaWQ7XG4gIH1cblxuICAvLyBhd2FpdCBkcml2ZXIuc2V0SW1wbGljaXRXYWl0VGltZW91dCg1MDAwKTtcblxuICByZXR1cm4gZHJpdmVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBkZWxldGVTZXNzaW9uICgpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBkcml2ZXIucXVpdCgpO1xuICB9IGNhdGNoIChpZ24pIHt9XG4gIHRyeSB7XG4gICAgYXdhaXQgc2VydmVyLmNsb3NlKCk7XG4gIH0gY2F0Y2ggKGlnbikge31cbn1cblxuZXhwb3J0IHsgaW5pdERyaXZlciwgaW5pdFNlc3Npb24sIGRlbGV0ZVNlc3Npb24sIEhPU1QsIFBPUlQsIE1PQ0hBX1RJTUVPVVQgfTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
